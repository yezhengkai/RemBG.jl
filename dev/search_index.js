var documenterSearchIndex = {"docs":
[{"location":"reference/public/#Public","page":"Public","title":"Public","text":"","category":"section"},{"location":"reference/public/","page":"Public","title":"Public","text":"Public API documentation for RemBG.","category":"page"},{"location":"reference/public/#Index","page":"Public","title":"Index","text":"","category":"section"},{"location":"reference/public/","page":"Public","title":"Public","text":"Pages = [\"public.md\"]","category":"page"},{"location":"reference/public/#Public-Interface","page":"Public","title":"Public Interface","text":"","category":"section"},{"location":"reference/public/","page":"Public","title":"Public","text":"remove\nnew_session\nset_onnx_execution_provider\nget_onnx_execution_provider\nU2Net\nU2Netp\nU2NetClothSeg\nU2NetHumanSeg\nSilueta\nISNetGeneralUse","category":"page"},{"location":"reference/public/#RemBG.remove","page":"Public","title":"RemBG.remove","text":"remove(img; kwargs...)\n\nRemove background from image.\n\nExamples\n\nremove(img)\nremove(img; session=new_session(U2Net))  # or use specific session\n\n\n\n\n\n","category":"function"},{"location":"reference/public/#RemBG.new_session","page":"Public","title":"RemBG.new_session","text":"new_session(::MattingModel)\n\nConstructs an InferenceSession object by input type.\n\nExamples\n\nsession = new_session(U2Net)\n\n\n\n\n\n","category":"function"},{"location":"reference/public/#RemBG.set_onnx_execution_provider","page":"Public","title":"RemBG.set_onnx_execution_provider","text":"set_onnx_execution_provider(execution_provider::Symbol)\n\nSet the execution provider for ONNX inference session. Now the \"execution_provider\" only accepts \":cpu\" and \":cuda\".\n\n\n\n\n\n","category":"function"},{"location":"reference/public/#RemBG.get_onnx_execution_provider","page":"Public","title":"RemBG.get_onnx_execution_provider","text":"get_onnx_execution_provider()\n\nGet the current execution provider for the ONNX inference session.\n\n\n\n\n\n","category":"function"},{"location":"reference/public/#RemBG.U2Net","page":"Public","title":"RemBG.U2Net","text":"U2NetModel object. U2NetModel is a subtype of MattingModel.\n\n\n\n\n\n","category":"constant"},{"location":"reference/public/#RemBG.U2Netp","page":"Public","title":"RemBG.U2Netp","text":"U2NetpModel object. U2NetpModel is a subtype of MattingModel.\n\n\n\n\n\n","category":"constant"},{"location":"reference/public/#RemBG.U2NetClothSeg","page":"Public","title":"RemBG.U2NetClothSeg","text":"U2NetClothSegModel object. U2NetClothSegModel is a subtype of MattingModel.\n\n\n\n\n\n","category":"constant"},{"location":"reference/public/#RemBG.U2NetHumanSeg","page":"Public","title":"RemBG.U2NetHumanSeg","text":"U2NetHumanSegModel object. U2NetHumanSegModel is a subtype of MattingModel.\n\n\n\n\n\n","category":"constant"},{"location":"reference/public/#RemBG.Silueta","page":"Public","title":"RemBG.Silueta","text":"SiluetaModel object. SiluetaModel is a subtype of MattingModel.\n\n\n\n\n\n","category":"constant"},{"location":"reference/public/#RemBG.ISNetGeneralUse","page":"Public","title":"RemBG.ISNetGeneralUse","text":"ISNetGeneralUseModel object. ISNetGeneralUseModel is a subtype of MattingModel.\n\n\n\n\n\n","category":"constant"},{"location":"reference/internal/#Internal","page":"Internal","title":"Internal","text":"","category":"section"},{"location":"reference/internal/","page":"Internal","title":"Internal","text":"Internal API documentation for RemBG.","category":"page"},{"location":"reference/internal/#Index","page":"Internal","title":"Index","text":"","category":"section"},{"location":"reference/internal/","page":"Internal","title":"Internal","text":"Pages = [\"internal.md\"]","category":"page"},{"location":"reference/internal/#Internal-Interface","page":"Internal","title":"Internal Interface","text":"","category":"section"},{"location":"reference/internal/","page":"Internal","title":"Internal","text":"RemBG.softmax\nRemBG.log_softmax","category":"page"},{"location":"reference/internal/#RemBG.softmax","page":"Internal","title":"RemBG.softmax","text":"softmax(X, dims)\nsoftmax(X, dims, θ)\n\nCompute the softmax function along the dims dimension of the array X. You can adjust the scaling factor θ.\n\nExamples\n\njulia> x = [1000.0 1.0; 1000.0 1.0];\njulia> y = RemBG.softmax(x, 2)\n2×2 Matrix{Float64}:\n 1.0  0.0\n 1.0  0.0\n\n\n\n\n\n","category":"function"},{"location":"reference/internal/#RemBG.log_softmax","page":"Internal","title":"RemBG.log_softmax","text":"log_softmax(x)\nlog_softmax(x, dims)\n\nCompute the logarithm of the softmax function.\n\nIn principle::\n\nlog_softmax(x) = log(softmax(x))\n\nbut using a more accurate implementation.\n\nArguments\n\nx: Input array\ndims: Axis to compute values along\n\nReturns\n\nArray or Number: An array with the same shape as x. Exponential of the result will\n\nsum to 1 along the specified axis. If x is a scalar, a scalar is returned.\n\nExamples\n\njulia> x = [1000.0, 1.0];\njulia> y = log_softmax(x)\n2-element Vector{Float64}:\n    0.0\n -999.0\n\njulia> x = [1000.0 1.0; 1000.0 1.0];\njulia> y = log_softmax(x, 2)\n2×2 Matrix{Float64}:\n 0.0  -999.0\n 0.0  -999.0\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = RemBG","category":"page"},{"location":"#RemBG","page":"Home","title":"RemBG","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is a Julia implementation of the python package rembg.","category":"page"}]
}
